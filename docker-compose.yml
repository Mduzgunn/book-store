version: '3'

services:
  app:
    image: 'book:latest'
    build:
      context: ../../..
    container_name: book
    depends_on:
      - db
      - rabbitmq
    ports:
      - 8080:8080
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://book-sv:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=toor
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_RABBITMQ_HOST=rabbitmq

  db:
    image: 'postgres:13.1-alpine'
    container_name: book-sv
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=toor
    ports:
      - 5433:5432

  rabbitmq:
    image: rabbitmq:3.8.22
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - 5673:5672
      - 15673:15672

#  prometheus:
#    image: prom/prometheus:v2.35.0
#    network_mode: host
#    container_name: prometheus
#    restart: unless-stopped
#    volumes:
#      - ./data/prometheus/config:/data/prometheus/
#    command:
#      - "--config.file=/data/prometheus/config/prometheus.yml"
#    ports:
#      - 9090:9090

  prometheus:
    image: prom/prometheus:v2.35.0
    user: root
    network_mode: host
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./data/prometheus/config:/data/prometheus/
    command:
        - "--storage.tsdb.path=/prometheus"
        - "--storage.tsdb.retention.time=15d"
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana-oss:8.5.2
    pull_policy: always
    network_mode: host
    container_name: grafana
    restart: unless-stopped
    user: root
    ports:
      - 3000:3000 # access grafana url
    volumes:
      - ./data/grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_DOMAIN=localhost
      # Enabled for logging
      - GF_LOG_MODE=console file
      - GF_LOG_FILTERS=alerting.notifier.slack:debug alertmanager:debug ngalert:debug

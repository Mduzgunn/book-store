version: '3'

services:
  app:
    container_name: book-app
    hostname: "book-app"
    image: 'book:latest'
    build:
      context: ../../..
    ports:
      - "9595-9597:8080"
    networks:
      - book-store-network
    depends_on:
      - db
      - rabbitmq
      - prometheus
      - grafana

    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://book-sv:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=toor
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_RABBITMQ_HOST=rabbitmq
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=prometheus
      - MANAGEMENT_ENDPOINTS.HEALTH.SHOW-DETAILS=always

  db:
    image: 'postgres:13.1-alpine'
    container_name: book-sv
    hostname: "book-sv"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=toor
    ports:
      - 5433:5432

  rabbitmq:
    image: rabbitmq:3.8.22
    container_name: book-rabbitmq
    hostname: "book-rabbitmq"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - 5673:5672
      - 15673:15672

  prometheus:
    image: prom/prometheus:v2.35.0
    container_name: prometheus
    hostname: "prometheus"
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./data/prometheus/config:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
    networks:
      - book-store-network

  grafana:
    image: grafana/grafana-oss:8.5.2
    pull_policy: always
    container_name: grafana
    hostname: "grafana"
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./data/grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_DOMAIN=localhost
    networks:
      - book-store-network

networks:
  book-store-network:
